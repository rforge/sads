summary(teste2)
coef(teste2)
confint(teste2)
fishers.alpha(9,9)
getSlots("fitsads")
getSlots("fitsad")
teste3 <- new("fitsad",coef=c(alpha=10),fullcoef=c(alpha=10))
coef(teste3)
summary(teste3)
teste3
dlnorm(-1)
dlnorm(-10)
dlnorm
class(dlnorm)
ppois
dpoilog
dls
dls(1:10,10,3)
args(ppois)
sum(dls(1:10,10,3))
pls(10,10,3)
pls(10,10,3)
pls(10,10,3)
sum(dls(1:10,10,3))
args(dpoilog)
0:0
0:1
rm(f1)
dpoilog(0:3,1,1)
sum(dpoilog(0:3,1,1))
ppoilog(0:3,1,1)
sum(dpoilog(0:3,1,1))
ppoilog(0:3,1,1)
sum(dpoilog(0:3,1,1))
ppoilog(0:3,1,1)
ppoilog(3,1,1)
sum(dpoilog(0:3,1,1))
sum(dpoilog(0:2,1,1))
ppoilog(2:3,1,1)
sum(dpoilog(0:2,1,1))
sum(dpoilog(0:3,1,1))
ppoilog(2:3,1,1)
dpoilog(-1,1,1)
ppoilog(2:3,1,1)
debug(ppoilog)
ppoilog(2:3,1,1)
q
Q
ppoilog(2:3,1,1)
debug(ppoilog)
ppoilog(2:3,1,1)
1-y
y
y
1-y
y
ppoilog(2:3,1,1)
ppoilog(2:3,1,1)
log(y)
y
Q
ppoilog(2:3,1,1)
sum(dpoilog(0:2,1,1))
sum(dpoilog(0:3,1,1))
ppoilog(2:3,1,1)
sum(dpoilog(0:2,1,1))
sum(dpoilog(0:3,1,1))
sum(dls(1:5,100,10))
sum(dls(1:10,100,10))
pls(c(5,10),100,10)
sum(dls(1:5,100,10))
sum(dls(1:10,100,10))
pls(c(5,10),100,10)
pls(c(5,10),100,10)
sum(dls(1:10,100,10))
sum(dls(1:5,100,10))
str(teste2)
teste2@minuslogl
x <- rnorm(100)
plot(ecdf(x))
x <- rlnorm(100)
plot(ecdf(x))
args(dpois)
args(dlnorm)
fitdistr
teste <- poilogMLE(moths)
teste
dpoilog(1:10,1,1)
poilog::dpoilog(1:10,1,1)
dpoilog
dpoilog(1:10,1,1)
dpoilog(1:10,1,1)
debug(dpoilog)
dpoilog(1:10,1,1)
Q
dpoilog(1:10,1,1)
dpoilog(1:10,1,1)
trunc
ppoilog(trunc, mu, sig)
Q
dpoilog(1:10,1,1)
dpoilog(1:10,1,1)
dpoilog(1:10,1,1)
dpoilog(1:10,1,1)
dpoilog(1:10,1,1)
dpoilog(1:10,1,1)
dpoilog(1:10,1,1)
poilog::dpoilog(1:10,1,1)
dpoilog(1:10,1,1)
debug(dpoilog)
dpoilog(1:10,1,1)
iconst
poilog::dpoilog(0,mu,sig)
1-poilog::dpoilog(0,mu,sig)
y
Q
dpoilog(1:10,1,1)
dpoilog(1:10,1,1)
poilog::dpoilog(1:10,1,1)
dpoilog(1:10,1,1, trunc=NULL)
sum(dpoilog(0:10,1,1, trunc=NULL))
ppoilog(10,mu=1,sig=1)
sum(dpoilog(0:10,1,1, trunc=NULL))
ppoilog(10,mu=1,sig=1)
sum(dpoilog(0:9,1,1, trunc=NULL))
ppoilog(9:10,mu=1,sig=1)
sum(dpoilog(1:9,1,1, trunc=0))
ppoilog(9,mu=1,sig=1,trunc=0)
sum(dpoilog(1:10,1,1, trunc=0))
ppoilog(9:10,mu=1,sig=1,trunc=0)
teste <- fit.poilog(moths)
teste <- fitpoilog(moths)
teste 
teste2 <- fitpoilog(moths)
coef(teste2)
summary(teste)
teste
summary(teste2)
logLik(teste2)
teste$logLval
confint(teste2)
teste2.prof <- profile(teste2)
plot(teste2.prof)
temp1 <- rsad(100,0.1,lnorm,"Poisson",meanlog=2,sdlog=1)
temp1
temp1 <- rsad(100,0.1,lnorm,"Poisson",meanlog=3,sdlog=1.5)
temp1
teste1 <- fitpoilog(temp1)
teste1b <- poilogMLE(temp1)
summary(teste1)
teste1 <- fitpoilog(temp1,method="SANN")
teste1 <- fitpoilog(temp1)
teste1.prf <- profile(temp1)
teste1.prf <- profile(teste1)
teste1.prf
summary(teste1)
teste1 <- fitpoilog(temp1,skip.hessian=T)
summary(teste1)
confint(teste1)
teste1 <- fitpoilog(temp1,method="BFGS")
confint(teste1)
temp1 <- rsad(100,0.1,lnorm,"Poisson",meanlog=3,sdlog=1.5)
temp1
exp(3+1.5^2/2)
exp(3+2^2/2)
exp(4+2^2/2)
temp1 <- rsad(100,0.1,lnorm,"Poisson",meanlog=3,sdlog=2)
temp1
teste1 <- fitpoilog(temp1)
summary(teste1)
temp1.prf <- profile(temp1)
temp1.prf <- profile(teste1)
plot(teste1.prf)
plot(temp1.prf)
temp1.prf
plotprofmle(temp1.prf)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
plotprofmle(temp1.prf)
dls
temp
temp1
teste <- fitpoilog(temp1)
teste <- fitpoilog(temp1)
summary(teste)
teste@sad
par(mfrow=c(1,1))
args(ppoilog)
ppoilog
ppoilog
ppoilog(1:max(samp1),mu=cf[1],sig=cf[2])
max(samp1)
head(t1)
tail(t1)
dim(t2)
tail(t2)
head(t1)
ceiling(100.1)
debug(radpred)
psad
dots
S
y
y
Ps <- do.call(psad,c(list(q=y,lower.tail=F),
                    dots))
Ps
pls(1,N=sum(samp2),alpha=fishers.alpha(N=sum(samp2))
)
pls(1,N=sum(samp2),alpha=fishers.alpha(N=sum(samp2),S=length(samp2)))
ppoints(S)
Q
tail(t3)
tail(t3)
q()
y
summary(samp1.ls)
AIC(samp1.ls)
)
args(pls)
args(AICctab)
args(AICtab)
class(samp2.pln)
AIC(samp2.pln)
AIC(samp2.ls)
str(samp2.ln)
str(samp2.ls)
ICtab
AICctab
debug(ICtab)
debug(ICtab)
names(L)
sapply(L,AIC)
sapply(L,ICs)
ICs
sapply(L, AICc, nobs = nobs)
sapply(L, AIC, nobs = nobs)
AICc
showMethods("AICc")
sapply(L,class)
AICc(samp2.ln)
AICc(samp2.ls)
AICc(samp2.ls, nobs=sum(samp2))
AIC(samp2.ls)
showMethods("AICc","mle2")
AICc
getMethod("AICc","mle2")
sapply(L, attr, "nobs")
Q
undebug(ICtab)
samp2.ls@sad
cf.ls
nobs
rm(nobs)
cor(1:10,1:10,c("spearman","pearson"))
args(corr)
args(cor)
cor(1:10,1:10,method=c("spearman","pearson"))
cor(1:10,1:10,method="spearman")
sapply(samp.all,AIC)
sapply(samp1.all,AIC)
AICtab(samp1.all)
plot.lm
cf.ls
cf <- coef(samp2.ln)
cf <- coef(samp2.pln)
class(coef)
class(cf)
cf
deparse(cf)
substitute(cf)
as.list(cf)
ICtab
cf.pln
coef(samp1.pln)
cf
plot.lm
"a"%in%letters
"A"%in%letters
fisher.ecosystem
args(ppoilog)
cf.ls
samp1.ls.rad
sam2.ls.octav
samp2.ls.octav
sum(samp2.ls.octav$Freq)
length(samp2)
samp2.ls.rad
sum(samp2.ls.rad$abund)
sum(samp2)
sum(samp2.ln.rad$abund)
sum(samp2.pl.rad$abund)
sum(samp2.pl.rad$abund)
samp2.pl.rad
head(samp21.pl.rad)
head(samp1.pl.rad)
sum(samp2.pl.rad$abund,na.rm=T)
sum(samp2)
sum(samp2.pl.rad$abund,na.rm=T)
sum(samp2.pl.rad$abund,na.rm=T)
sum(samp2)
sum(samp2.ls.rad$abund,na.rm=T)
debug(rad.pred)
debug(radpred)
psad
dots
fishers.alpha(samp2)
fishers.alpha(samp2,nmax=sum(samp2))
args(fishers.alpha)
fishers.alpha(sum(samp2),length(samp2))
args(pls)
Q
Q
samp2.ls.octav
sum(samp2.ls.octav$Freq)
length(samp2)
)
)
sum(samp2.ls.octav$Freq)
debug(octavpred)
S
oct
n
n
2^(oct-1)
dots
Y
pls(n,N=dots$N,alpha=dots$alpha)
pls(0,N=dots$N,alpha=dots$alpha)
pls(1,N=dots$N,alpha=dots$alpha)
temp <- pls(1,N=dots$N,alpha=dots$alpha)
c(temp[1],diff(temp))
temp <- pls(2^(oct-1),N=dots$N,alpha=dots$alpha)
c(temp[1],diff(temp))
Y
oct
dots
temp <- Y
Y
length(c(Y[1],diff(Y)))
oct
dots$N
sum(x)
Q
sum(samp2.ls.octav$Freq)
sum(samp2.ls.rad$ab)
sum(samp2)
debug(plot.fitsad)
debug(plot.fitsad)
x <- samp2.pln
y
oct.df
rad.df
sum(y)
sum(samp2)
length(samp2)
length(y)
cf
octavpred(y,sad=x@sad,cf)
cf
plot(oct.df,coef=cf,...)
plot(oct.df,coef=cf)
class(oct.df)
q()
c
names(oct.df)
names(samp2.ls.rad)
names(samp2.ls.rad)
names(oct.df)
q()
y
rm(list=ls())
ls()
save.image()
install.packages("../pkg/sads_0.2.03.tar.gz", repos=NULL)
install.packages("../pkg/sads_0.2.03.tar.gz", repos=NULL)
install.packages("../pkg/sads_0.2.03.tar.gz", repos=NULL)
install.packages("../pkg/sads_0.2.03.tar.gz", repos=NULL)
install.packages("../pkg/sads_0.2.03.tar.gz", repos=NULL)
q()
n
q()
n
pls(1:100,N=1000,alpha=10)
q()
n
undoc("sads")
library(tools)
undoc("sads")
require(bbmle)
mle2
require(sads)
teste <- fitlogser(moths)
data(moths)
teste <- fitlogser(moths)
confint(teste)
plot(profile(teste))
plot(rad(moths))
points(radpred(teste))
points(radpred(moths,sad="ls",coef=as.list(coef(teste))))
teste2 <- fitpoilog(moths)
points(radpred(moths,sad="poilog",coef=as.list(coef(teste2))),col="red")
AICctab(teste,teste2)
AICctab(teste,teste2, obs=length(moths))
AICtab(teste,teste2)
logLik(teste)
logLik(teste2)
X11()
plot(octav(moths))
plot(octav(moths))
points(octpred(moths,sad="ls",coef=as.list(coef(teste))))
points(octavpred(moths,sad="ls",coef=as.list(coef(teste))))
points(octavpred(moths,sad="poilog",coef=as.list(coef(teste2))),col="red")
dev.set(2)
abline(h=2^(0:13),lty=2,col="gray")
q()
y
rsad
am1
am1
table(d.am1)
x
rownames(x)
names(x)
sum(x)
length(d.am1)
x/sum(x)
curve(Fn2(x),1,max(x))
curve(Fn2(x),1,31)
curve(Fn2(x),27,31)
X11()
curve(Fn2(x),27,31)
q()
y
library(sads)
rsad
x
y
ados
dados
dados
LL(1,1)
dsadr
summary(teste)
summary(teste)
q()
y
samp2
names(samp1.pln)
str(samp1.pln)
AICctab(samp1.pln,samp1.ls,nobs=length(samp1),base=T, weights=T)# Poilog deve vencer
samp1.pl.rad[1:5,]
samp1.ls.rad[1:5,]
head(samp1.pl.octav)
class(samp1.pl)
class(samp1.pln)
plot(samp1.pln)
par(mfrow=c(1,2))
plot(samp1.pln)
debug(points)
points(samp1.pl.octav)
teste <- function(x,...){
            dots <- list(...)
            if(!"type"%in%names(dots)) dots$type="b"
            if(!"col"%in%names(dots)) dots$col="blue"
            X <- c(0,as.integer(as.character(x$octave)))
            X <- X[-length(X)]+diff(X)/2
            do.call(points,c(list(x=X,y=x$Freq),dots))
          }
debug(teste)
teste(samp1.pl.octav)
dots
x
dots
dots
dots$x <- X
dots$y <- x$Freq
dots
args(points)
do.call(points,dots)
Q
confint(samp1.ls)
plot(profile(samp1.ls))
plotprofmle(profile(samp1.ls))
debug(rsad)
temp <- rsad(S=20,frac=0.1,sad=lnorm,samp="Poisson")
sad
com
args(rlnorm)
sam
sam
teste
tempp
temp
q()
y
q()
y
q()
n
